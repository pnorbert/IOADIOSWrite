/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// So we get a decent warning if we have multiple functionObject entries
// with the same name.
#inputMode error;

application     icoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.5;

deltaT          0.005;

writeControl    timeStep;

writeInterval   20;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

functions
{
    adiosData
    {
        // Write solution (Eulerian, Lagrangian) into ADIOS container
        type                adiosWrite;
        // -> normally use #include <-
        /// #include            "adiosDict";
        functionObjectLibs  ("libIOadiosWrite.so");

        write
        {
            // Only use explicitly named fields/clouds.
            // Otherwise select all fields/clouds that have AUTO_WRITE on.
            explicit        true; // default = false

            // Volume fields
            fields      ( U p );

            // Clouds
            clouds      ( kinematicCloud );

            // Additional cloud attributes to write. Choices:
            // - Us      = Slip velocity Us = U - Uc
            cloudAttrs  ( Us );
        }

        // Output write method: 'adios_config -m' to see available methods
        // = MPI               (default)
        // = MPI_AGGREGATE
        // = POSIX
        writeMethod     MPI;

        // Parameters for the selected write method
        // = ""               (default)
        // = "verbose=4;num_aggregators=2;num_ost=2" ...
        writeOptions    "verbose=4"

        // Write interval (in number of iterations)
        writeInterval       20;
    }
}

// ************************************************************************* //
